{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHUB\\\\react-cvzb52\\\\src\\\\Map.js\";\nimport React, { Component } from \"react\";\nimport { Map, HeatMap, GoogleApiWrapper } from \"google-maps-react\";\nimport axios from \"axios\";\nconst mapStyles = {\n  width: '45%',\n  height: '54%'\n};\nconst gradient = [\"rgba(0, 255, 255, 0)\", \"rgba(0, 255, 255, 1)\", \"rgba(0, 191, 255, 1)\", \"rgba(0, 127, 255, 1)\", \"rgba(0, 63, 255, 1)\", \"rgba(0, 0, 255, 1)\", \"rgba(0, 0, 223, 1)\", \"rgba(0, 0, 191, 1)\", \"rgba(0, 0, 159, 1)\", \"rgba(0, 0, 127, 1)\", \"rgba(63, 0, 91, 1)\", \"rgba(127, 0, 63, 1)\", \"rgba(191, 0, 31, 1)\", \"rgba(255, 0, 0, 1)\"];\n\nclass MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isHeatVisible: true\n    };\n\n    this.toggleHeatmap = () => {\n      this.setState({\n        isHeatVisible: !this.state.isHeatVisible\n      });\n    };\n  }\n\n  handleMapMount(mapProps, map) {\n    this.map = map; //setTimeout(() =>{console.log(this.map.getBounds());},10)\n\n    this.bounds = this.map.getBounds();\n    console.log(this.bounds, this.bounds.getNorthEast().lat());\n    axios.post(\"http://localhost:8000/api/heatMap/\", {\n      lat_en: this.bounds.getNorthEast().lat(),\n      lng_en: this.bounds.getNorthEast().lng(),\n      lat_ws: this.bounds.getSouthWest().lat(),\n      lng_ws: this.bounds.getSouthWest().lng(),\n      datetime_start: null,\n      datetime_end: null\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    this.handleMapMount = this.handleMapMount.bind(this);\n    {\n      this.state.isHeatVisible ? HeatMap : null;\n    }\n    let heat = /*#__PURE__*/React.createElement(HeatMap //gradient={gradient}\n    , {\n      positions: this.props.positions,\n      opacity: 1,\n      radius: 10,\n      maxIntensity: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      style: mapStyles,\n      scrollwheel: false,\n      zoomControl: false,\n      google: this.props.google,\n      className: \"map\",\n      zoom: this.props.zoom,\n      initialCenter: this.props.center,\n      onReady: this.handleMapReady,\n      onBounds_changed: this.handleMapMount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"floating-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"toggleHeatmap\",\n      onClick: this.toggleHeatmap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Toggle HeatMap\")), this.state.isHeatVisible ? heat : null));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAmJ92b4CXEobypIq9cuEEcl9CMpZ8HCe8\",\n  language: \"th\",\n  libraries: [\"visualization\"]\n})(MapContainer);","map":{"version":3,"sources":["D:/GitHUB/react-cvzb52/src/Map.js"],"names":["React","Component","Map","HeatMap","GoogleApiWrapper","axios","mapStyles","width","height","gradient","MapContainer","state","isHeatVisible","toggleHeatmap","setState","handleMapMount","mapProps","map","bounds","getBounds","console","log","getNorthEast","lat","post","lat_en","lng_en","lng","lat_ws","getSouthWest","lng_ws","datetime_start","datetime_end","headers","then","response","catch","error","render","bind","heat","props","positions","google","zoom","center","handleMapReady","apiKey","language","libraries"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, HeatMap, GoogleApiWrapper } from \"google-maps-react\";\nimport axios from \"axios\";\n\nconst mapStyles = {\n  width: '45%',\n  height: '54%'\n};\n\nconst gradient = [\n  \"rgba(0, 255, 255, 0)\",\n  \"rgba(0, 255, 255, 1)\",\n  \"rgba(0, 191, 255, 1)\",\n  \"rgba(0, 127, 255, 1)\",\n  \"rgba(0, 63, 255, 1)\",\n  \"rgba(0, 0, 255, 1)\",\n  \"rgba(0, 0, 223, 1)\",\n  \"rgba(0, 0, 191, 1)\",\n  \"rgba(0, 0, 159, 1)\",\n  \"rgba(0, 0, 127, 1)\",\n  \"rgba(63, 0, 91, 1)\",\n  \"rgba(127, 0, 63, 1)\",\n  \"rgba(191, 0, 31, 1)\",\n  \"rgba(255, 0, 0, 1)\"\n];\n\nclass MapContainer extends React.Component {\n\n  handleMapMount(mapProps, map) {\n    this.map = map;\n    //setTimeout(() =>{console.log(this.map.getBounds());},10)\n    this.bounds = this.map.getBounds();\n    console.log(this.bounds,this.bounds.getNorthEast().lat())\n    axios\n      .post(\"http://localhost:8000/api/heatMap/\",{\n       lat_en:this.bounds.getNorthEast().lat(),\n       lng_en:this.bounds.getNorthEast().lng(),\n       lat_ws:this.bounds.getSouthWest().lat(),\n       lng_ws:this.bounds.getSouthWest().lng(),\n       datetime_start: null,\n       datetime_end: null\n    },{\n        headers: {\n          'Content-Type': 'application/json'\n    }})\n      .then(function (response) {\n      console.log(response);\n    })\n      .catch(function (error) {\n      console.log(error);\n    });\n}\n  state = {\n    isHeatVisible : true\n  };\n  toggleHeatmap = () => {\n    this.setState({isHeatVisible: !this.state.isHeatVisible});\n  }\n  render() {\n    this.handleMapMount = this.handleMapMount.bind(this);\n    {this.state.isHeatVisible ? HeatMap : null}\n    let heat = <HeatMap\n            //gradient={gradient}\n            positions={this.props.positions}\n            opacity={1}\n            radius={10}\n            maxIntensity = {5}\n          />\n    return (\n      <div className=\"map-container\" >\n        <Map\n          style={mapStyles}\n          scrollwheel = {false}\n          zoomControl = {false}\n          google={this.props.google}\n          className={\"map\"}\n          zoom={this.props.zoom}\n          initialCenter={this.props.center}\n          onReady={this.handleMapReady}\n          onBounds_changed={this.handleMapMount}\n        >\n          <div id=\"floating-panel\">\n            <button id=\"toggleHeatmap\"onClick={this.toggleHeatmap}>Toggle HeatMap</button>\n          </div>\n          {this.state.isHeatVisible ? heat: null}\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAmJ92b4CXEobypIq9cuEEcl9CMpZ8HCe8\",\n  language: \"th\",\n  libraries: [\"visualization\"]\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}